{"version":3,"sources":["api/users.js","store/types.jsx","components/UsersList/UsersList.jsx","store/actions.jsx","components/PostsList/PostsList.jsx","components/PostDetails/PostDetails.jsx","App.js","store/usersReducer.jsx","store/postsReducer.jsx","store/rootReducer.jsx","reportWebVitals.js","index.js"],"names":["getUsers","a","fetch","res","json","getUserPosts","userId","addNewPost","newPost","method","headers","body","JSON","stringify","FETCH_USERS","SET_USER_ID","FETCH_USER_POSTS","SET_USER_POST","UsersList","dispatch","useDispatch","users","useSelector","state","history","useHistory","useEffect","type","payload","className","scope","map","user","id","name","company","email","phone","website","address","city","street","onClick","push","PostsList","selectedUserId","posts","useState","showModal","setShowModal","title","setTitle","content","setContent","userPosts","addPost","console","log","post","postId","data-bs-dismiss","aria-label","placeholder","value","onChange","target","for","PostDetail","selectedPostId","selectedPost","App","exact","path","initialState","rootReducer","combineReducers","action","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf935a69.chunk.js","sourcesContent":["export const getUsers = async () => {\n  const res = await fetch('https://jsonplaceholder.typicode.com/users')\n  \n  return res.json()\n}\n\nexport const getUserPosts = async userId => {\n  const res = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${userId}`)\n\n  return res.json()\n}\n\nexport const addNewPost = async (newPost, userId) => {\n  const res = await fetch('https://jsonplaceholder.typicode.com/posts', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(newPost),\n  })\n\n  return res.json();\n}","export const FETCH_USERS = 'USERS/FETCH_USERS';\nexport const SET_USER_ID = 'USERS/SET_USER_ID';\nexport const FETCH_USER_POSTS = 'POSTS/FETCH_USER_POSTS';\nexport const SET_USER_POST = 'POSTS/SET_USER_POST';","import React, { useEffect } from 'react';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { fetchUsers, setUserId } from '../../store/actions';\n\n\nconst UsersList = () => {\n  const dispatch = useDispatch();\n  const users = useSelector(state => state.users.users);\n  const history = useHistory()\n\n  useEffect(()=>{\n    dispatch(fetchUsers())\n  }, [])\n\n\n  return (\n    users &&\n    \n    <table className=\"table\">\n      <thead className=\"table-primary\">\n        <tr>\n          <th scope=\"col\">#</th>\n          <th scope=\"col\">Name</th>\n          <th scope=\"col\">Company</th>\n          <th scope=\"col\">Email</th>\n          <th scope=\"col\">Phone</th>\n          <th scope=\"col\">Website</th>\n          <th scope=\"col\">Address</th>\n          <th scope=\"col\">Action</th>\n        </tr>\n      </thead>\n      <tbody className=\"table-light\">\n        {\n          users.map(user => (\n            <tr key={user.id}>\n              <th scope=\"row\">{user.id}</th>\n              <td>{user.name}</td>\n              <td>{user.company.name}</td>\n              <td>{user.email}</td>\n              <td>{user.phone}</td>\n              <td>{user.website}</td>\n              <td>{user.address.city}, {user.address.street}</td>\n              <button \n                type=\"button\" \n                className=\"btn btn-info\"\n                onClick={()=> {\n                  dispatch(setUserId(user.id))\n                  history.push('/posts')\n                }}\n              >\n                Posts\n              </button>\n            </tr>\n          ))\n        }\n      </tbody>\n    </table>\n  )\n}\n\n// const mapStateToProps = state => ({\n//   userId: state.users.userId,\n// })\n\nexport default UsersList;\n\n","import { getUsers, getUserPosts } from '../api/users';\nimport { ADD_NEW_POST, FETCH_USERS, FETCH_USER_POSTS, SET_USER_ID, SET_USER_POST } from './types';\n\nexport const fetchUsers = () => {\n  return async dispatch => {\n    const users = await getUsers();\n\n    dispatch({ type: FETCH_USERS, payload: users })\n  }\n}\n\nexport const setUserId = (userId) => ({\n  type: SET_USER_ID,\n  payload: userId,\n})\n\nexport const fetchUserPosts = (userId) => {\n  return async dispatch => {\n    const userPosts = await getUserPosts(userId);\n\n    dispatch({ type: FETCH_USER_POSTS, payload: userPosts })\n  }\n}\n\nexport const selectPost = (postId) => {\n  return {\n    type: SET_USER_POST,\n    payload: postId,\n  }\n}","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchUserPosts, selectPost } from '../../store/actions';\nimport { addNewPost } from '../../api/users';\nimport './PostList.css';\nimport { useHistory } from 'react-router-dom';\n\n\nconst PostsList = () => {\n  const dispatch = useDispatch();\n  const selectedUserId = useSelector(state => state.users.userId);\n  const posts = useSelector(state => state.posts.posts);\n  // const selectedPostId = useSelector(state => state.posts.selectedPost);\n  const [showModal, setShowModal] = useState(false)\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const history = useHistory();\n\n  useEffect(()=>{\n    dispatch(fetchUserPosts(selectedUserId))\n  }, [])\n\n  const openModal = () => {\n   setShowModal(true)\n  }\n\n\n  const addPost = async () => {\n    const newPost = {\n      userId: selectedUserId,\n      title,\n      body: content,\n    } \n\n    await addNewPost(newPost)\n    setTitle('');\n    setContent('')\n  }\n\n  \n  console.log(posts)\n\n  return (\n    <>\n      <table className=\"table\">\n        <thead className=\"table-primary\">\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Title</th>\n            <th scope=\"col\">Content</th>\n            <th scope=\"col\">Action</th>\n          </tr>\n        </thead>\n        <tbody className=\"table-light\">\n          {\n            posts.map(post => (\n              <tr key={post.id}>\n                <th scope=\"row\">{post.id}</th>\n                <td>{post.title}</td>\n                <td>{post.body}</td>\n                <button \n                  type=\"button\" \n                  className=\"btn btn-info\"\n                  onClick={() => {\n                    dispatch(selectPost(post.id))\n                    history.push('/posts/details')\n                  }}\n                >\n                  Details\n                </button>\n              </tr>\n            ))\n          }\n        </tbody>\n      </table>\n      <button \n        type=\"button\" \n        className=\"btn btn-primary\"\n        onClick={openModal}\n      >\n        Add new\n      </button>\n\n      {\n        showModal && (\n          <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Add new post</h5>\n                <button \n                  type=\"button\" \n                  className=\"btn-close\" \n                  data-bs-dismiss=\"modal\" \n                  aria-label=\"Close\"\n                  onClick={()=>setShowModal(false)}\n                >\n                </button>\n              </div>\n              <div className=\"modal-body\">\n              <div className=\"form-floating mb-3\">\n                <input \n                  type=\"text\" \n                  className=\"form-control\" \n                  id=\"input-title\" \n                  placeholder=\"title*\"\n                  value={title}\n                  onChange={({target}) => setTitle(target.value)}\n                />\n                <label for=\"input-title\">Post title</label>\n              </div>\n                <div className=\"form-floating\">\n                  <textarea \n                    className=\"form-control\" \n                    placeholder=\"Leave a comment here\" \n                    id=\"input-content\"\n                    value={content}\n                    onChange={({target})=> setContent(target.value)}\n                  >\n                  </textarea>\n                  <label for=\"input-content\">Post content</label>\n                </div>\n              </div>\n              <div className=\"modal-footer\">\n                <button \n                  type=\"button\" \n                  className=\"btn btn-success\"\n                  onClick={addPost}\n                >\n                  Post\n                </button>\n              </div>\n            </div>\n          </div>\n        )\n      } \n    </>\n  )\n}\n\nexport default PostsList;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nconst PostDetail = () => {\n  const selectedPostId = useSelector(state => state.posts.selectedPost);\n\n  return (\n    <h1>{selectedPostId}</h1>\n  )\n}\n\nexport default PostDetail;","import React from 'react';\nimport {\n  HashRouter,\n  Link,\n  Switch,\n  Route,\n} from 'react-router-dom'\n\nimport UsersList from './components/UsersList/UsersList';\nimport PostsList from './components/PostsList/PostsList';\nimport PostDetail from './components/PostDetails/PostDetails';\n\nfunction App() {\n\n\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <UsersList />\n          </Route>\n          <Route exact path=\"/posts\">\n            <PostsList />\n          </Route>\n          <Route exact path=\"/posts/details\">\n            <PostDetail />\n          </Route>\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { FETCH_USERS, SET_USER_ID } from './types';\n\nconst initialState = {\n  users: [],\n  userId: null,\n}\n\nexport const usersReducer = (state=initialState, action) => {\n  switch (action.type) {\n    case FETCH_USERS:\n      return {\n        ...state,\n        users: action.payload,\n      }\n    case SET_USER_ID:\n      return {\n        ...state,\n        userId: action.payload,\n      }\n    \n\n    default:\n      return state;\n  }\n}","import { FETCH_USER_POSTS, SET_USER_POST } from './types';\n\nconst initialState = {\n  posts: [],\n  selectedPost: null,\n}\n\nexport const postsReducer = (state=initialState, action) => {\n  switch (action.type) {\n    case FETCH_USER_POSTS:\n      return {\n        ...state,\n        posts: action.payload,\n      } \n    case SET_USER_POST:\n      return {\n        ...state,\n        selectedPost: action.payload,\n      }  \n\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport { usersReducer } from './usersReducer';\nimport { postsReducer } from './postsReducer';\n\nexport const rootReducer = combineReducers({\n  users: usersReducer,\n  posts: postsReducer,\n})","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport App from './App';\nimport { rootReducer } from './store/rootReducer';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...[thunk]))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}