{"version":3,"sources":["api/api.js","store/types.jsx","store/actions.jsx","components/UsersList/UsersList.jsx","components/WrongFields/WrongFields.jsx","components/ValidFields/ValidFields.jsx","components/PostsList/ShowModalCreate.jsx","components/PostsList/PostsList.jsx","components/PostDetails/ShowModalEdit.jsx","components/PostDetails/PostDetails.jsx","App.js","store/usersReducer.jsx","store/postsReducer.jsx","store/commentsReducer.jsx","store/appReducer.jsx","store/rootReducer.jsx","reportWebVitals.js","index.js"],"names":["BASE_URL","getUsers","a","fetch","res","json","getUserPosts","userId","addNewPost","newPost","method","headers","body","JSON","stringify","getPostComments","postId","removePost","editPost","postData","id","FETCH_USERS","SET_USER_ID","FETCH_USER_POSTS","SET_USER_POST","FETCH_POST_COMMENTS","SHOW_MESSAGE","SHOW_MODAL_CREATE","SHOW_MODAL_EDIT","showMessage","status","type","payload","showModalCreate","showModalEdit","UsersList","dispatch","useDispatch","users","useSelector","state","history","useHistory","useEffect","className","scope","map","user","name","company","email","phone","website","address","city","street","onClick","push","WrongFields","role","ValidFields","ShowModalCreate","selectedUserId","useState","title","setTitle","content","setContent","message","app","wrongFields","setWrongFields","addPost","setTimeout","Error","data-bs-dismiss","aria-label","placeholder","value","onChange","target","htmlFor","PostsList","posts","modalCreate","userPosts","post","ShowModalEdit","selectedPost","editSelectedPost","PostDetail","postComments","comments","modalEdit","deleteSelectedPost","comment","aria-current","href","App","exact","path","initialState","showMesage","rootReducer","combineReducers","action","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2224ce9.chunk.js","sourcesContent":["const BASE_URL = 'https://jsonplaceholder.typicode.com';\n\nexport const getUsers = async() => {\n  const res = await fetch(`${BASE_URL}/users`);\n\n  return res.json();\n};\n\nexport const getUserPosts = async(userId) => {\n  const res = await fetch(`${BASE_URL}/posts?userId=${userId}`);\n\n  return res.json();\n};\n\nexport const addNewPost = async(newPost) => {\n  const res = await fetch(`${BASE_URL}/posts`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(newPost),\n  });\n\n  return res.json();\n};\n\nexport const getPostComments = async(postId) => {\n  const res = await fetch(`${BASE_URL}/comments?postId=${postId}`);\n\n  return res.json();\n};\n\nexport const removePost = async(postId) => {\n  const res = await fetch(`${BASE_URL}/posts/${postId}`, {\n    method: 'DELETE',\n  });\n\n  return res.json();\n};\n\nexport const editPost = async(postData) => {\n  const res = await fetch(`${BASE_URL}/posts/${postData.id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n      body: JSON.stringify(postData),\n    },\n  });\n\n  return res.json();\n};\n","export const FETCH_USERS = 'USERS/FETCH_USERS';\nexport const SET_USER_ID = 'USERS/SET_USER_ID';\nexport const FETCH_USER_POSTS = 'POSTS/FETCH_USER_POSTS';\nexport const SET_USER_POST = 'POSTS/SET_USER_POST';\nexport const FETCH_POST_COMMENTS = 'COMMENTS/FETCH_POST_COMMENTS';\nexport const SHOW_MESSAGE = 'APP/SHOW_MESSAGE';\nexport const SHOW_MODAL_CREATE = 'APP/SHOW_MODAL_CREATE';\nexport const SHOW_MODAL_EDIT = 'APP/SHOW_MODAL_EDIT';\n","import { getUsers, getUserPosts, getPostComments } from '../api/api';\nimport {\n  FETCH_POST_COMMENTS,\n  FETCH_USERS,\n  FETCH_USER_POSTS,\n  SET_USER_ID,\n  SET_USER_POST,\n  SHOW_MESSAGE,\n  SHOW_MODAL_CREATE,\n  SHOW_MODAL_EDIT,\n} from './types';\n\nexport const fetchUsers = () => async(dispatch) => {\n  const users = await getUsers();\n\n  dispatch({ type: FETCH_USERS, payload: users });\n};\n\nexport const setUserId = userId => ({\n  type: SET_USER_ID,\n  payload: userId,\n});\n\nexport const fetchUserPosts = userId => async(dispatch) => {\n  const userPosts = await getUserPosts(userId);\n\n  dispatch({ type: FETCH_USER_POSTS, payload: userPosts });\n};\n\nexport const selectPost = selectedPost => ({\n  type: SET_USER_POST,\n  payload: selectedPost,\n});\n\nexport const fetchPostComments = postId => async(dispatch) => {\n  const postComments = await getPostComments(postId);\n\n  dispatch({ type: FETCH_POST_COMMENTS, payload: postComments });\n};\n\nexport const showMessage = status => ({\n  type: SHOW_MESSAGE,\n  payload: status,\n});\n\nexport const showModalCreate = status => ({\n  type: SHOW_MODAL_CREATE,\n  payload: status,\n});\n\nexport const showModalEdit = status => ({\n  type: SHOW_MODAL_EDIT,\n  payload: status,\n});\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { fetchUsers, setUserId } from '../../store/actions';\n\nconst UsersList = () => {\n  const dispatch = useDispatch();\n  const users = useSelector(state => state.users.users);\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, []);\n\n  return (\n    users\n    && (\n    <table className=\"table\">\n      <thead className=\"table-primary\">\n        <tr>\n          <th scope=\"col\">#</th>\n          <th scope=\"col\">Name</th>\n          <th scope=\"col\">Company</th>\n          <th scope=\"col\">Email</th>\n          <th scope=\"col\">Phone</th>\n          <th scope=\"col\">Website</th>\n          <th scope=\"col\">Address</th>\n          <th scope=\"col\">Action</th>\n        </tr>\n      </thead>\n      <tbody className=\"table-light\">\n        {\n          users.map(user => (\n            <tr key={user.id}>\n              <th scope=\"row\">{user.id}</th>\n              <td>{user.name}</td>\n              <td>{user.company.name}</td>\n              <td>{user.email}</td>\n              <td>{user.phone}</td>\n              <td>{user.website}</td>\n              <td>\n                {user.address.city}\n                ,\n                {' '}\n                {user.address.street}\n              </td>\n              <button\n                type=\"button\"\n                className=\"btn btn-info\"\n                onClick={() => {\n                  dispatch(setUserId(user.id));\n                  history.push('/posts');\n                }}\n              >\n                Posts\n              </button>\n            </tr>\n          ))\n        }\n      </tbody>\n    </table>\n    )\n  );\n};\n\nexport default UsersList;\n","import React from 'react';\n\nexport const WrongFields = () => (\n  <div className=\"alert alert-danger\" role=\"alert\">\n    Input fields*\n  </div>\n);\n","import React from 'react';\n\nexport const ValidFields = () => (\n  <div className=\"alert alert-success\" role=\"alert\">\n    Succesfully!\n  </div>\n);\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { showMessage, showModalCreate } from '../../store/actions';\nimport { addNewPost } from '../../api/api';\nimport { WrongFields } from '../WrongFields/WrongFields';\nimport { ValidFields } from '../ValidFields/ValidFields';\n\nexport const ShowModalCreate = () => {\n  const dispatch = useDispatch();\n  const selectedUserId = useSelector(state => state.users.userId);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const message = useSelector(state => state.app.showMessage);\n  const [wrongFields, setWrongFields] = useState(null);\n\n  const addPost = async() => {\n    const newPost = {\n      userId: selectedUserId,\n      title,\n      body: content,\n    };\n\n    if (newPost.title && newPost.body) {\n      try {\n        await addNewPost(newPost);\n\n        dispatch(showMessage(true));\n\n        setTimeout(() => {\n          dispatch(showMessage(false));\n        }, 2000);\n      } catch (error) {\n        dispatch(showMessage(false));\n\n        throw new Error(error);\n      }\n\n      setTitle('');\n      setContent('');\n    } else {\n      setWrongFields(true);\n      setTimeout(() => {\n        setWrongFields(false);\n      }, 2000);\n    }\n  };\n\n  return (\n    <div className=\"modal-create\">\n      <div className=\"modal-dialog\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">Add new post</h5>\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              data-bs-dismiss=\"modal\"\n              aria-label=\"Close\"\n              onClick={() => dispatch(showModalCreate(false))}\n            />\n          </div>\n          <div className=\"modal-body\">\n            <div className=\"form-floating mb-3\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"input-title\"\n                placeholder=\"title*\"\n                value={title}\n                onChange={({ target }) => setTitle(target.value)}\n              />\n              <label htmlFor=\"input-title\">Post title</label>\n            </div>\n            <div className=\"form-floating\">\n              <textarea\n                className=\"form-control\"\n                placeholder=\"Leave a comment here\"\n                id=\"input-content\"\n                value={content}\n                onChange={({ target }) => setContent(target.value)}\n              />\n              <label htmlFor=\"input-content\">Post content</label>\n            </div>\n          </div>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-success\"\n              onClick={addPost}\n            >\n              Post\n            </button>\n          </div>\n        </div>\n      </div>\n      {\n        (message && <ValidFields />)\n          || (wrongFields && <WrongFields />)\n      }\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport {\n  fetchUserPosts,\n  selectPost,\n  showModalCreate,\n} from '../../store/actions';\nimport { ShowModalCreate } from './ShowModalCreate';\nimport './PostsList.scss';\n\nconst PostsList = () => {\n  const dispatch = useDispatch();\n  const selectedUserId = useSelector(state => state.users.userId);\n  const posts = useSelector(state => state.posts.posts);\n  const modalCreate = useSelector(state => state.app.showModalCreate);\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(fetchUserPosts(selectedUserId));\n  }, []);\n\n  return (\n    <>\n      <table className=\"table\">\n        <thead className=\"table-primary\">\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Title</th>\n            <th scope=\"col\">Content</th>\n            <th scope=\"col\">Action</th>\n          </tr>\n        </thead>\n        <tbody className=\"table-light\">\n          {\n            posts.map(post => (\n              <tr key={post.id}>\n                <th scope=\"row\">{post.id}</th>\n                <td>{post.title}</td>\n                <td>{post.body}</td>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-info\"\n                  onClick={() => {\n                    dispatch(selectPost(post));\n                    history.push('/posts/details');\n                  }}\n                >\n                  Details\n                </button>\n              </tr>\n            ))\n          }\n        </tbody>\n      </table>\n      <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        onClick={() => dispatch(showModalCreate(true))}\n      >\n        Add new\n      </button>\n\n      {\n        modalCreate && <ShowModalCreate />\n      }\n    </>\n  );\n};\n\nexport default PostsList;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { editPost } from '../../api/api';\nimport { showMessage, showModalEdit } from '../../store/actions';\nimport { WrongFields } from '../WrongFields/WrongFields';\nimport { ValidFields } from '../ValidFields/ValidFields';\n\nexport const ShowModalEdit = () => {\n  const dispatch = useDispatch();\n  const selectedPost = useSelector(state => state.posts.selectedPost);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const message = useSelector(state => state.app.showMessage);\n  const [wrongFields, setWrongFields] = useState(null);\n\n  const editSelectedPost = async() => {\n    const newPost = {\n      id: selectedPost.id,\n      title,\n      body: content,\n    };\n\n    if (newPost.title && newPost.body) {\n      try {\n        await editPost(newPost);\n\n        dispatch(showMessage(true));\n        setTimeout(() => {\n          dispatch(showMessage(false));\n        }, 2000);\n      } catch (error) {\n        dispatch(showMessage(false));\n\n        throw new Error(error);\n      }\n\n      setTitle('');\n      setContent('');\n    } else {\n      setWrongFields(true);\n      setTimeout(() => {\n        setWrongFields(false);\n      }, 2000);\n    }\n  };\n\n  return (\n    <div className=\"modal-edit\">\n      <div className=\"modal-dialog\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">Edit a post</h5>\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              data-bs-dismiss=\"modal\"\n              aria-label=\"Close\"\n              onClick={() => dispatch(showModalEdit(false))}\n            />\n          </div>\n          <div className=\"modal-body\">\n            <div className=\"form-floating mb-3\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"input-title\"\n                placeholder=\"title*\"\n                value={title}\n                onChange={({ target }) => setTitle(target.value)}\n              />\n              <label htmlFor=\"input-title\">Post title</label>\n            </div>\n            <div className=\"form-floating\">\n              <textarea\n                className=\"form-control\"\n                placeholder=\"Leave a comment here\"\n                id=\"input-content\"\n                value={content}\n                onChange={({ target }) => setContent(target.value)}\n              />\n              <label htmlFor=\"input-content\">Post content</label>\n            </div>\n          </div>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-success\"\n              onClick={editSelectedPost}\n            >\n              Edit\n            </button>\n          </div>\n        </div>\n      </div>\n      {\n        (message && <ValidFields />)\n          || (wrongFields && <WrongFields />)\n      }\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { removePost } from '../../api/api';\nimport {\n  fetchPostComments,\n  showMessage,\n  showModalEdit,\n} from '../../store/actions';\nimport { ShowModalEdit } from './ShowModalEdit';\nimport './PostDetails.scss';\nimport { ValidFields } from '../ValidFields/ValidFields';\n\nconst PostDetail = () => {\n  const dispatch = useDispatch();\n  const selectedPost = useSelector(state => state.posts.selectedPost);\n  const postComments = useSelector(state => state.comments.comments);\n  const message = useSelector(state => state.app.showMessage);\n  const modalEdit = useSelector(state => state.app.showModalEdit);\n\n  useEffect(() => {\n    dispatch(fetchPostComments(selectedPost.id));\n  }, []);\n\n  const deleteSelectedPost = async() => {\n    try {\n      await removePost(selectedPost.id);\n\n      dispatch(showMessage(true));\n      setTimeout(() => {\n        dispatch(showMessage(false));\n      }, 3000);\n    } catch (error) {\n      dispatch(showMessage(false));\n\n      throw new Error(error);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{selectedPost.title}</h5>\n          <p className=\"card-text\">{selectedPost.body}</p>\n        </div>\n        <div className=\"card-buttons\">\n          <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            onClick={deleteSelectedPost}\n          >\n            Delete\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-warning\"\n            onClick={() => dispatch(showModalEdit(true))}\n          >\n            Edit\n          </button>\n        </div>\n      </div>\n      <div className=\"list-group\">\n        {\n            postComments.map(comment => (\n              <div\n                className=\"list-group-item list-group-item-action active\"\n                aria-current=\"true\"\n                key={comment.id}\n              >\n                <div className=\"d-flex w-100 justify-content-between\">\n                  <h4 className=\"item-name\">{comment.name}</h4>\n                  <small>3 days ago</small>\n                </div>\n                <a href=\"/\" className=\"item-email\">{comment.email}</a>\n                <small>{comment.body}</small>\n              </div>\n            ))\n          }\n      </div>\n      {\n          modalEdit && <ShowModalEdit />\n        }\n      {\n          message && <ValidFields />\n        }\n    </>\n  );\n};\n\nexport default PostDetail;\n","import React from 'react';\nimport {\n  HashRouter,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport UsersList from './components/UsersList/UsersList';\nimport PostsList from './components/PostsList/PostsList';\nimport PostDetail from './components/PostDetails/PostDetails';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <UsersList />\n          </Route>\n          <Route exact path=\"/posts\">\n            <PostsList />\n          </Route>\n          <Route exact path=\"/posts/details\">\n            <PostDetail />\n          </Route>\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { FETCH_USERS, SET_USER_ID } from './types';\n\nconst initialState = {\n  users: [],\n  userId: null,\n};\n\nexport const usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_USERS:\n      return {\n        ...state,\n        users: action.payload,\n      };\n    case SET_USER_ID:\n      return {\n        ...state,\n        userId: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { FETCH_USER_POSTS, SET_USER_POST } from './types';\n\nconst initialState = {\n  posts: [],\n  selectedPost: null,\n};\n\nexport const postsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_USER_POSTS:\n      return {\n        ...state,\n        posts: action.payload,\n      };\n    case SET_USER_POST:\n      return {\n        ...state,\n        selectedPost: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { FETCH_POST_COMMENTS } from './types';\n\nconst initialState = {\n  comments: [],\n};\n\nexport const commentsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_POST_COMMENTS:\n      return {\n        ...state,\n        comments: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import {\n  SHOW_MESSAGE,\n  SHOW_MODAL_CREATE,\n  SHOW_MODAL_EDIT,\n} from './types';\n\nconst initialState = {\n  showMesage: false,\n  showModalCreate: false,\n  showModalEdit: false,\n};\n\nexport const appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_MESSAGE:\n      return {\n        ...state,\n        showMessage: action.payload,\n      };\n    case SHOW_MODAL_CREATE:\n      return {\n        ...state,\n        showModalCreate: action.payload,\n      };\n    case SHOW_MODAL_EDIT:\n      return {\n        ...state,\n        showModalEdit: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { usersReducer } from './usersReducer';\nimport { postsReducer } from './postsReducer';\nimport { commentsReducer } from './commentsReducer';\nimport { appReducer } from './appReducer';\n\nexport const rootReducer = combineReducers({\n  users: usersReducer,\n  posts: postsReducer,\n  comments: commentsReducer,\n  app: appReducer,\n});\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport App from './App';\nimport { rootReducer } from './store/rootReducer';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...[thunk])),\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}